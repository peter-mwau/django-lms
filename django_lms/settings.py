"""
Django settings for django_lms project.

Generated by 'django-admin startproject' using Django 3.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
TEMPLATE_DIR = os.path.join(BASE_DIR, 'templates')
ACCOUNT_TEMPLATE_DIR = os.path.join(BASE_DIR, 'templates', 'account')
STATIC_DIR = os.path.join(BASE_DIR, 'static')
MEDIA_DIR = os.path.join(BASE_DIR, 'media')

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'x#d7_3ws7!%((d$pbm8l^=oghi%-^y&eo-9h@^^yx1#s826z0x'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [ ]
SITE_ID = 1
AUTHENTICATION_BACKENDS = [
    # Needed to login by username in Django admin, regardless of `allauth`
    'django.contrib.auth.backends.ModelBackend',

    # `allauth` specific authentication methods, such as login by email
    'allauth.account.auth_backends.AuthenticationBackend',
]

# Application definition

INSTALLED_APPS = [
    # 'admin_material.apps.AdminMaterialDashboardConfig',
    "admin_interface",
    "colorfield",
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    
    'users',
    'courses',
    
    'assignments',
    'bootstrap4',
    'resources',
    'editor',
    'graphene_django',
    'crispy_forms',
    'django_forms_bootstrap',
    'tailwind',
    'theme',
    'django_browser_reload',
    'rest_framework',
    'markdown',
    'widget_tweaks',
    "debug_toolbar",
   
    
    'markdownx',
    'django.contrib.sites',

    "allauth",
    "allauth.account",
    "allauth.socialaccount",
    "allauth.socialaccount.providers.google",
    "allauth.socialaccount.providers.github",


]
TAILWIND_APP_NAME = 'theme'
INTERNAL_IPS = [
    "127.0.0.1",
]
GRAPHENE = {
    'SCHEMA': 'django_lms.schema.schema'
}

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    "debug_toolbar.middleware.DebugToolbarMiddleware",
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    "django_browser_reload.middleware.BrowserReloadMiddleware",
    "allauth.account.middleware.AccountMiddleware",
    
]

# CACHES = {
#     "default": {
#         "BACKEND": "django_redis.cache.RedisCache",
#         "LOCATION": "redis://localhost:6379/1",
#         "OPTIONS": {
#             "CLIENT_CLASS": "django_redis.client.DefaultClient",
#         }
# }
# }

ROOT_URLCONF = 'django_lms.urls'
# EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [TEMPLATE_DIR, ACCOUNT_TEMPLATE_DIR],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                "courses.context_processors.courses_processor",
                'django.template.context_processors.request',
                
            ],
        },
    },
]

SOCIALACCOUNT_PROVIDERS = {
    "google": {
        "APP": {
            "client_id": "477107765491-unp4kkcaef05tqsefdl1ujdsdj67vrl5.apps.googleusercontent.com",
            "secret": "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",
            "key": ""
            }
        },
    "github": {
        "APP": {
            "client_id": "07438dec7e42a78a9d98",
            "secret": "1249b7e63db0ea073fee6d3fe9173df3d18c8dbd",
            "key": ""
            }
        }
    }
# ACCOUNT_SIGNUP_FORM_CLASS = 'users.forms.UserCreateForm'
ACCOUNT_LOGOUT_ON_GET = True
ACCOUNT_ADAPTER = 'users.adapters.CustomAccountAdapter'
ACCOUNT_FORMS = {'signup': 'users.forms.UserCreateForm'}
WSGI_APPLICATION = 'django_lms.wsgi.application'

# Use Redis for session storage
# SESSION_ENGINE = 'django.contrib.sessions.backends.cache'
# SESSION_CACHE_ALIAS = 'default'

# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'django_lms3',
        'USER': 'root',
        'PASSWORD': 'lms123',
        'HOST': 'localhost',
        'PORT': '3306',
    }
}

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.mysql',
#         'NAME': 'django_lms2',
#         'USER': 'root',
#         'PASSWORD': 'password',
#         'HOST': 'db',
#         'PORT': '3306',
#     }
# }


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

AUTH_USER_MODEL = 'users.User'

# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Africa/Nairobi'

USE_I18N = True

USE_L10N = True

USE_TZ = True

SILENCED_SYSTEM_CHECKS = ["security.W019"]
X_FRAME_OPTIONS = "SAMEORIGIN" 
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

STATIC_URL = '/static/'
STATICFILES_DIRS = [
    STATIC_DIR,
]
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
CSRF_COOKIE_SECURE = True  # Set to True if using HTTPS
CSRF_COOKIE_HTTPONLY = True
AUTH_USER_MODEL = "users.User"

LOGIN_REDIRECT_URL = '/courses/all/'
LOGOUT_REDIRECT_URL = '/accounts/login/'

MEDIA_ROOT = MEDIA_DIR
MEDIA_URL = '/media/'